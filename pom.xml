<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>ch.daplab.swisssimilarity</groupId>
    <artifactId>swisssimengine</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <scala.binary.version>2.10</scala.binary.version>
        <spark.streaming.version>1.5.2.2.3.4.0-3485</spark.streaming.version>
        <kafka.version>0.9.0.2.3.4.0-3485</kafka.version>
        <curator.version>2.7.1</curator.version>
        <maven.dependency.plugin.version>2.4</maven.dependency.plugin.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.10</slf4j.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <maven.rpm.plugin.version>2.1.4</maven.rpm.plugin.version>

        <!-- RPM Spec related -->
        <rpm.license>2015-2016, DAPLAB</rpm.license>
        <rpm.group>Application/DAPLAB</rpm.group>
        <rpm.rootprefix>/opt/daplab/swisssim</rpm.rootprefix>
        <rpm.apprefix>${rpm.rootprefix}</rpm.apprefix>
        <rpm.username>daplab_prod</rpm.username>
        <rpm.groupname>daplab_prod</rpm.groupname>
        <rpm.logdirname>logs</rpm.logdirname>
        <rpm.targetos>el6</rpm.targetos>
        <rpm.targetArch>x86_64</rpm.targetArch>
        <rpm.path>${rpm.apprefix}</rpm.path>
        <rpm.logdirpath>${rpm.apprefix}/${rpm.logdirname}</rpm.logdirpath>
        <rpm.appname>${project.artifactId}</rpm.appname>
        <rpm.basedir>${project.artifactId}</rpm.basedir>
        <rpm.distribution>Swisssim</rpm.distribution>
    </properties>

    <packaging>jar</packaging>
    <name>Swiss Similarity Engine</name>

    <repositories>
        <repository>
            <id>HWX-Release</id>
            <name>Artifactory-HWX-Release</name>
            <url>http://repo.hortonworks.com/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>HWX-jetty-hadoop</id>
            <name>Artifactory-HWX-jetty-hadop</name>
            <url>http://repo.hortonworks.com/content/repositories/jetty-hadoop/</url>
        </repository>
        <repository>
            <id>MavenCentral</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>Cloudera</id>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
        </repository>
        <repository>
            <id>ibiblio</id>
            <name>Ibiblio</name>
            <url>http://mirrors.ibiblio.org/maven2/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.streaming.version}</version>
            <!--scope>provided</scope-->
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <version>${spark.streaming.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka_${scala.binary.version}</artifactId>
            <version>${spark.streaming.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-twitter_${scala.binary.version}</artifactId>
            <version>${spark.streaming.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-framework</artifactId>
            <version>${curator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <version>${curator.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>2.1.9</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector_${scala.binary.version}</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.datastax.spark</groupId>
            <artifactId>spark-cassandra-connector-embedded_${scala.binary.version}</artifactId>
            <version>1.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>finagle-core_${scala.binary.version}</artifactId>
            <version>6.31.0</version>
        </dependency>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>finagle-http_${scala.binary.version}</artifactId>
            <version>6.31.0</version>
        </dependency>
        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-jackson_${scala.binary.version}</artifactId>
            <version>3.2.10</version> <!-- 3.3+ is incompatible with Spark as the time of writing -->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <id>eclipse-add-source</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <minimizeJar>false</minimizeJar>
                    <artifactSet>
                        <includes>
                            <include>*:*</include>
                        </includes>
                    </artifactSet>
                    <relocations>
                        <relocation>
                            <pattern>com.google.common</pattern>
                            <shadedPattern>shaded.com.google.common</shadedPattern>
                        </relocation>
                    </relocations>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/*</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>build.properties</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>0.7.0</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <!--configLocation>scalastyle_config.xml</configLocation>
                    <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                    <outputEncoding>${project.reporting.outputEncoding}</outputEncoding-->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>${maven.rpm.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>attached-rpm</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <license>${rpm.license}</license>
                    <distribution>${rpm.distribution}</distribution>
                    <group>${rpm.group}</group>
                    <needarch>${rpm.targetArch}</needarch>
                    <classifier>${rpm.targetos}.${rpm.targetArch}</classifier>
                    <name>${rpm.appname}</name>
                    <version>
                        ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
                    </version>
                    <release>${rpmRelease}</release>
                    <defineStatements>
                        <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                    </defineStatements>
                    <mappings>
                        <mapping>
                            <directory>${rpm.apprefix}</directory>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                        </mapping>
                        <!-- Top level directory -->
                        <!--Remember ALWAYS ensure that the base dir managed by RPM is the
                            top level directory of the tool itself. Do NOT specify /app or /app/vscc
                            on its own for example as this top level VSCC directory is shared across
                            all VSCC tools and should NEVER be owned by RPM. Think of it as /usr/local
                            etc -->
                        <mapping>
                            <directory>${rpm.path}</directory>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                        </mapping>
                        <!-- set all directory permissions -->
                        <mapping>
                            <configuration>true</configuration>
                            <directory>${rpm.path}/config</directory>
                            <recurseDirectories>true</recurseDirectories>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                        </mapping>
                        <mapping>
                            <directory>${rpm.path}/bin</directory>
                            <recurseDirectories>true</recurseDirectories>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                        </mapping>
                        <mapping>
                            <directory>${rpm.path}/lib</directory>
                            <recurseDirectories>true</recurseDirectories>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.jar
                                    </location>
                                </source>
                                <softlinkSource>
                                    <destination>${project.artifactId}.jar</destination>
                                    <location>${project.artifactId}-${project.version}.jar</location>
                                </softlinkSource>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.path}/logs</directory>
                            <recurseDirectories>true</recurseDirectories>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                        </mapping>
                        <!-- We exclude the dir because the perms were defined above recursively -->
                        <mapping>
                            <configuration>true</configuration>
                            <directory>${rpm.path}/config</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>0644</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                            <sources>
                                <source>
                                    <location>${project.basedir}/src/main/config</location>
                                </source>
                            </sources>
                        </mapping>
                        <!-- We exclude the dir because the perms were defined above recursively -->
                        <mapping>
                            <directory>${rpm.path}/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>0755</filemode>
                            <username>${rpm.username}</username>
                            <groupname>${rpm.groupname}</groupname>
                            <sources>
                                <source>
                                    <location>${project.basedir}/src/main/scripts</location>
                                    <!-- This prevents RPM python build failure on Jenkins -->
                                    <excludes>
                                        <exclude>*.pyc</exclude>
                                        <exclude>*.pyo</exclude>
                                    </excludes>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>rpmRelease.defaultValue</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!rpmRelease</name>
                </property>
            </activation>
            <properties>
                <rpmRelease>1</rpmRelease>
            </properties>
        </profile>
    </profiles>
</project>
